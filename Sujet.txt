Sujet libre, faites un environnement docker le plus fournis possible permettant de faire tourner un projet, montrez moi que vous savez maitriser, docker-compose et dockerfile

Exemple d’application possible :

Créer un docker-compose qui va permettre de lancer deux service nginx, deux services PHP et une base de donnée mysql

Projet à mettre en ligne : https://github.com/MagnusDot/TP-Final-3IW-ESGI

Donc deux fois le même site ! mais avec la même base de donnée

pour php vous devez créer vous même avec un dockerfile (vous pouvez utiliser n’importe quel FROM ) ( le fichier de configuration pour nginx sera fournis )

Vous devez être capable d’accéder au code des deux serveur nginx par votre navigateur web.  et exécuter les commande de démarrage de laravel dans vos deux services PHP ( trouver comment automatiser ça ): 

- composer install
- npm run build
- php artisan migrate:fresh —seed

ne pas oublier que pour lier laravel et la db le .env peut vous servir ( dupliquer .env.exemple en .env et remplir les champs db )


Changer le code des deux serveurs pour quand je tappe sur Nginx 1 je vois d’affiché “Serveur 1” et sur Nginx 2 “Serveur 2” mais garder les bouton de connexion et inscription ( fichier /ressources/views/welcome.blade.php )

réussir à vous inscrire et vous connecter sur les deux nginx

vérifier que vous avez bien dorénavent 2 utilisateurs en database

Tout ajout que vous pouvez mettre sera des points en plus ( ‘exemple : traefik, minio, mailship etc … ) 

N’oubliez pas d’ajouter les .env de votre code dans le rendu le rendu doit être fait sous un repos Github en public ( sinon c’est zéro )